# github workflow to automate builds

name: Golang

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on: [push, pull_request, workflow_dispatch]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    name: Build on ${{ matrix.runs-on }}

    # The type of runner that the job will run on
    runs-on: ${{ matrix.runs-on }}

    strategy:
      fail-fast: false
      matrix:
        runs-on: [windows-latest, ubuntu-latest, macos-latest]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Sets Go version to use
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      # Runs commands using the runners shell
      - name: Build
        run: go build
        working-directory: cmd/play

      # upload to "actions" tab artifacts (can only make a single .zip from a dir's files)
      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        if: matrix.runs-on == 'windows-latest'
        with:
          name: play-windows
          path: cmd\play\play.exe

      - name: Upload Linux artifact
        uses: actions/upload-artifact@v4
        if: matrix.runs-on == 'ubuntu-latest'
        with:
          name: play-linux
          path: cmd/play/play

      - name: Upload macOS artifact
        uses: actions/upload-artifact@v4
        if: matrix.runs-on == 'macos-latest'
        with:
          name: play-macos
          path: cmd/play/play

  create-release:
    name: Create release
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts/

      - name: Display downloaded artifacts
        run: find ./artifacts/

      - name: Create release files
        run: |
          mkdir release
          pushd ./artifacts/
          for DIR in *; do
            zip -j ../release/$DIR.zip ./$DIR/*
          done
          popd

      - name: Create rolling release
        if: github.ref == 'refs/heads/main'
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: false
          title: "Latest rolling release"
          files: |
            ./release/*
